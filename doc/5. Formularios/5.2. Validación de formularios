5.2. Validación de formularios

Veremos como validar las peticiones hechas por el navegador de manera que concuerden con la logica de la aplicaci´pon.

en el controlador observamos que se extiende a un controlador base

	    class PagesController extends Controller

Ubicado en 

	App\Http\Controller.php


Este a su vez utiliza un trail 

	use Illuminate\Foundation\Validation\ValidatesRequests;

que viene con Laravel que provee varios metoos utiles para la validación..


Regresando al controlador PaqgesControler borando el contenido del metodo mensaje

El primer parametro que recibe es el reuqest y el segundo un array con las reglas de validación.

'nombre' => 'required',
                'email' => 'email'


Donde el nombre es requerido y el campo email es validado con html5 del lado del cliente y si esta desactivo la validación del lado del cliente, quedara activo la validación del lado del servidor.

en el formulario dejamos el campo email como tipo texto, al enviar la información retorna el formulario pero no informa laravel del por que regresa asi al formulario.

Se tiene para esto un objeto que esta dispoible en todas las vistas llada errors, que contiene los errores de validación..

Para acceder a ellos. en el formulario:

accedemos con:

			<input type="text" name="nombre">
		{{ $errors->first() }}

Para obtener el primer error del campo nombre en este caso, debemos ver ahora si el error.

Si se desea tener mas de una validación se puede hacer de la siguiente manera:

	//'email' => 'required | email'
      'email' => ['required , email']

Otra forma es pasar un array de la siguiejte forma, y cualquiera de las dos funciona

Con las dos reglas de validación de email, requerida y un email valido.

Pero al hacer una validación que no pasa devolvera el valor que se tenia anteriormente en el formaulario con el metodo old().

	<input type="text" name="nombre" value={{ old('nombre') }}>


con esto el valor se mantiene. Creando otra regla de validación para el textarea requerido y con un alongitud minima de 5 caracteres.

	'mensaje' => 'required | min:5'

Hay varias opciones de validación y si se quieren saber cuales son podemos ir a:
	
	https://laravel.com/docs/10.x/validation

Haciendo click en 

	https://laravel.com/docs/10.x/validation#available-validation-rules

Con todas las reglas de validación 


Se agregan os mensajes de error al textarea

Se finaliza el formulario y la validaci[on es para todos los campos y el campo mensaje debe ser mayor a cinco caracteres				


---
	<form method="POST" action="contacto">

	 @csrf
	
	<p><label for="nombre">
		Nombre
		<input type="text" name="nombre" value={{ old('nombre') }}>
		{{ $errors->first('nombre') }}
	</label></p>
	
	<p><label for="email">
		Email
		<input type="text" name="email" value={{ old('email') }}>
		{{ $errors->first('email') }}
	</label></p>
	
	<p><label for="nombre">
		Mensaje
		<textarea name="mensaje"></textarea>
		{{ $errors->first('mensaje') }}

	</label></p>
	
	<input type="submit" value="Enviar">

</form>

---


Estilos a errores
--------------------

Para dar un color rojo en el layout de las plantillas y como no hay un proyecto real se hace en linea


Los estilos deben ir en archivos separados.

En el formulario se agrega como segundo parametro de la siguiente forma con la clase error, se buscara la cadena :message.



---

			<input type="text" name="nombre" value={{ old('nombre') }}>
		{{ $errors->first('nombre','<span class=error>:message</span>') }}

---


Aplicandose el formato a los demas campos

...,'<span class=error>:message</span>'


solo que ahora en el formulario se visualizan los mensajes de rror tal cual

	<span class=error>The nombre field is required.</span>

Ahora para imprimir HTML como estructura debemos utilizar esta sintaxis 


---

	{!! $errors->first('nombre', '<span class=error>:message</span>') !!}
---	

volvemos a la validación del formulario y listo se tiene el formato de forma correcta





Cambiar los mensajes de ingles a español
---------------------------------------


Desde la carpeta Resources

	resources/lang/en

Ha una carpeta llamada eng, aqui se guardan ñas traducciones de mensajes de validación entre otros,

Revisar el archivo

	validation.php


Buscar la palabra: required que es el mensaje que se visualiza cuando es requerido.

attribute es enlazada por el nombre del campo, en este campo nombre.

Se podria editar el mensaje directamente desde aqui. aunque hay una mejor forma de hacerla.

duplicar la carpeta llamarla es de español. En esta es donde se haran las traducciones abriendo el archivo

	resources/lang/es/validation.php

buscando : required

Este es el mensaje que se debe modificare

Pero debemos indicar a laravel que el mensaje esta en español

Para ello vamos a la carpeta config/app.php

Cambiamos en la region, cambiandolo a es que se acaba de crear

	'locale' => 'es',	


Reenviamos y ahora los mensajes deben desplegarse en español.


