1. Rutas - Que son y comó se utilizan

Todas las rutas estan en alrchivo
	app/Http/routes.php

Ahora se encuentran en
	routes/web.php

Este archivo se carga automaticamente en el Framework.

Las rutas son las URL de entrada de nuestra aplicación.

Ej. Donde por ejemplo nuestro sitio es www.misio.com


Entonces si quermos definir una ruta, que responda cuando se ingrasa al dominio, se hace de la siguiete forma
routes.php

	----
	// www.misitio.com = Routes::get('/');
	----

Si queremos que sea a la pagina de contacto, se define de la siguiente forma:
 	
 	// www.misitio.com/contacto = Routes::get('contacto');

El primer parametro es el archivo, y el segundo parametro es una funcion anonima, conocida como clousure, y lo que sea que retornemos de aqui es lo que el usuario vera en el navegador.

Ej. Retornando una cadena de caracteres
	
	Route::get('/', function(){
		return "Hola desde la pagina de inicio";
	});

Levantamos servicio
	php artisan serve


Contacto:
---------
Se creamos la sección de contaco

	Route::get('contacto', function(){
		
	});


Resumiendo es definir una URL y se responde con una función.

Parametros por URL
Si se necesita enviar parametros por URL.


Ej. Pasndo el parametro a la funciń anonima

En la ruta.
	Route::get('saludos/{nombre}, function($nombre){
		return "Saludos $nombre";
	})



Parametros
----------

Para utilizar parametrs obligatorios y opcionales


Si no esta difinida en la ruta el parametro no encontrara la pagina, por que inicialmente se esta indicando que el parametro es obligatorio, para este caso

	Route::get('saludos/{nombre?}', function($nombre = "Invitado"){
		return "Saludos $nombre";
	});



Validación de parametros
-----------------------

Cuando no queremos utiiza en el nombre numeros, para eviarlo uiizamos
Validando el parametro y en seguida la expresión regular



	Route::get('saludos/{nombre?}', function($nombre = "Invitado"){

        return "Saludos $nombre";

    })->where('nombre', "[A-Za-Z]+");



Rutas con nombre
-----------------

Teemos una ruta para los contactos, retornamos solo 

Route::get('/', function () {
    echo "<a href='contactos'>Contacto</a><br/>";
    echo "<a href='contactos'>Contacto</a><br/>";
    echo "<a href='contactos'>Contacto</a><br/>";
    echo "<a href='contactos'>Contacto</a><br/>";
   
});

Y el dueño del sitio nos solicita que cambiamos la dirección de contacto a contactanos.

De inicio le damos nombres a las rutas de la siguiente manera:


	Route::get('/', function () {
	    echo "<a href=" . route('contactos') . ">Contacto</a><br/>";
	    echo "<a href=" . route('contactos') . ">Contacto</a><br/>";
	    echo "<a href=" . route('contactos') . ">Contacto</a><br/>";
	    echo "<a href=" . route('contactos') . ">Contacto</a><br/>";
	   
	});

	Route::get('contactanos', ['as' => 'contactos', function(){
	    return "Hola desde la pagina de contacto";     
	    }]);


En la URL
	Apuntara a:
		http://127.0.0.1:8000/contactanos
	Desplegando:
		Hola desde la pagina de contacto


No habra necesidad de modificar estas referencias en el futuro
	El ejercicio es cambiar solamente  una persona llamandose a contactame

	
	Route::get('contactame', ['as' => 'contactos', function(){
    	return "Hola desde la pagina de contacto";     
    }]);

En la url desplegara la ruta:
	http://127.0.0.1:8000/contactame


Se hace referencia con esto a la ruta y uno a la URL



Retornar paginas HTML cuando se accedan a determinadas rutas:
------------------------------------------------------------
Aunque esto no es la forma correcta en un sitio web

Entonces se hace utilizando vistas